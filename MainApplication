import tkinter as tk
from tkinter import Tk, Frame, Menu
import Controller
import Views
import Models
import NAVRouter
import AccessAPI as API
from PIL import Image

class App(tk.Tk):
  def __init__(self):
    super().__init__()
    self.currentView = []
    self.dbPath = "Random_Database_Path"
    self.accessAPI = API.AccessAPI(self.dbPath)

    def switchFrames():
      if len(self.currentView) == 1:
        for i in self.currentView:
          frame = i
          frame.grid_remove()
          self.currentView.remove(i)
          del i
      else:
        print("No view called yet. You are at the root.")
        print("Your API connected to Random_Database_Path")

    def OutlookControllerInitialization():
      switchFrames()
      outlookModel = Models.OutlookModel(self.accessAPI)
      outlookView = Views.OutlookView(self)
      self.currentView.append(outlookView)
      outlookView.grid(row=0, column=0)
      outlookController = Controller.OutlookController(outlookModel, outlookView)
      outlookView.set_controller(outlookController)
      outlookController.render()

    def TemplateCreationControllerInitialization():
      switchFrames()
      tcvModel = Models.TCVModel(self.accessAPI)
      tcvView = Views.TemplateCreationView(self)
      self.currentView.append(tcvView)
      tcvView.grid(row=0, column=0)
      tcvController = Controller.TCVController(tcvModel, tcvView, self.accessAPI)
      tcvView.set_contoller(tcvController)
      tcvController.render()

    def NAVProcessControllerInitialization():
      switchFrames()
      NAVModel = Models.NAVModel(self.accessAPI)
      NAVView = Views.NAVProcessView(self)
      self.currentView.append(NAVView)
      NAVView.grid(row=0,column=0)
      NAVController = Controller.NAVController(NAVModel, NAVView, self.accessAPI)
      NAVView.set_controller(NAVController)
      NAVController.render()


    def showPicture():
      Image.open("DocumentationPicture.PNG")

    self.geometry('1500x500')
    self.title('Root')
    menubar = Menu(self)
    self.config(menu=menubar)

    viewInitializer_menu = Menu(
      menubar,
      tearoff=0
    )

    help_menu = Menu(
      menubar,
      tearoff=0
    )

    menubar.add_cascade(
      label="Views",
      menu=viewInitializer_menu
    )

    menubar.add_cascade(
      label="Help",
      menu=help_menu
    )

    viewInitializer_menu.add_command(label='Template Creation', command = TemplateCreationControllerInitialization)
    viewInitializer_menu.add_separator()

    sub_menu_Processes = Menu(viewInitializer_menu, tearoff=0)
    sub_menu_Processes.add_command(label='Outlook', command = OutlookControllerInitialization)
    sub_menu_Processes.add_command(label='NAVPlausi', command = NAVProcessControllerInitialization)

    viewInitializer_menu.add_cascade(
      label="Processes",
      menu=sub_menu_Processes
    )

    viewInitializer_menu.add_command(
      label="Exit",
      command=self.destroy
    )

    sub_menu = Menu(viewInitializer_menu, tearoff=0)

    help_menu.add_command(label='Documentation', command = showPicture)

app = App()
app.mainloop()


    
